name: Test Suite
on: [push, pull_request]
jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        language: [python, javascript]
    steps:
      - uses: actions/checkout@v3

      - name: Setup uv
        if: matrix.language == 'python'
        uses: astral-sh/setup-uv@v1

      - name: Python Tests (with coverage)
        if: matrix.language == 'python'
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - if: matrix.language == 'python'
        run: |
          uv pip install --system pytest pytest-cov coverage
          if [ -f requirements.txt ]; then uv pip install --system -r requirements.txt; fi
          pytest --cov=flywheel --cov-report=xml --cov-report=term --maxfail=1 --disable-warnings -q --cov-fail-under=100
          coverage report --fail-under=100

      - name: JavaScript Tests
        if: matrix.language == 'javascript'
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - if: matrix.language == 'javascript' && hashFiles('package.json') != ''
        run: |
          npm install --no-audit --no-fund
          npx playwright install --with-deps
          if [ -f requirements.txt ]; then uv pip install --system -r requirements.txt; fi
          npm test -- --coverage --coverageReporters=lcov

      # --- Upload coverage only if the matching report exists ---
      - name: Upload Python coverage
        if: matrix.language == 'python' && hashFiles('coverage.xml') != ''
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          flags: python
          fail_ci_if_error: true

      - name: Upload JS coverage
        if: matrix.language == 'javascript' && hashFiles('coverage/lcov.info') != ''
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/lcov.info
          flags: javascript
          fail_ci_if_error: true
